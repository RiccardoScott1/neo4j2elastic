version: '2.2'
services:


  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: es01
   # build:
   #   context: ./elastic
    environment:
      #- node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elastic/data:/usr/share/elasticsearch/data
     # - ./elastic/elasticsearch_startup.sh:/usr/share/elasticsearch/elasticsearch_startup.sh
     # - "./elastic/elasticsearch_mapping.json"
    ports:
      - "9200:9200"
    networks:
      - elastic
      - elastic_neo
    #command: ["sh", "./elasticsearch_startup.sh"]

    healthcheck:
      test: ["CMD", "curl", "-f", "http://es01:9200"]
      interval: 0m30s
      timeout: 10s
      #start_period: 40s
      retries: 3

  kib01:
    image: docker.elastic.co/kibana/kibana:7.10.0
    container_name: kib01
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
    networks:
      - elastic
    depends_on:
      es01:
        condition: service_healthy

  neo4j:
      restart: always
      image: neo4j:3.5.14
      container_name: neo4j
      environment:
        - NEO4J_AUTH=none #neo4j/password
        - dbms.default_listen_address=0.0.0.0.
        - dbms.unmanaged_extension_classes=com.graphaware.server=/graphaware
        - elastic="http://es01"
        - NEO4J_dbms_directories_data=./neo4j/data
      volumes:
        - ./neo4j/conf:/conf
        - ./neo4j/plugins:/plugins
        - ./neo4j/data/import:/data/import
        - ./neo4j/data:/data
      ports:
        - "7474:7474"
        - "7687:7687"
      networks:
        - elastic_neo
      depends_on:
        es01:
          condition: service_healthy

networks:
  elastic:
    driver: bridge
  elastic_neo:
    driver: bridge


